; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[options]
unittesting_buildflag = -D unitTesting
generic_hw_buildflag = -D generic_hw
coverage_buildflag =
    -lgcov
    --coverage
    -fprofile-abs-path
    -Og
selected_tests =
	test_generic_circular*

;[env:upesy_wroom]
;platform = espressif32
;board = upesy_wroom
;framework = arduino
;lib_deps =
;	mobizt/FirebaseClient@^1.2.0
;upload_port = /dev/ttyUSB0
;monitor_port = /dev/ttyUSB0
;monitor_speed = 115200
;build_flags =
;	${options.unittesting_buildflag}
;	${options.generic_hw_buildflag}
;	${options.coverage_buildflag}
;test_framework = unity
;test_filter = ${options.selected_tests}
;extra_scripts = pre:extra_script.py

[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino
lib_deps =
    mobizt/FirebaseClient@^1.2.0
    ESP8266WiFi
upload_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0
monitor_speed = 115200
monitor_filters = esp8266_exception_decoder, default
build_type = debug
build_flags =
	${options.unittesting_buildflag}
	${options.generic_hw_buildflag}
	${options.coverage_buildflag}
test_framework = unity
test_filter = ${options.selected_tests}
;extra_scripts = pre:./scripts/compile_commands.py
;

;[env:esp32dev]
[env:esp32cam]
platform = espressif32
;board = esp32cam
;framework = espidf
framework = arduino
board = esp32dev
;platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
;platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.3
lib_deps =
    esp32-camera
upload_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0
monitor_speed = 115200
build_flags =
	${options.unittesting_buildflag}
	${options.generic_hw_buildflag}
	${options.coverage_buildflag}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
test_framework = unity
test_filter = ${options.selected_tests}
